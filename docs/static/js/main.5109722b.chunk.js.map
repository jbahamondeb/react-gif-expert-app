{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","anime","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","cargarTitulos","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAEQ,sBAAMC,SAjBO,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAWd,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SA1BM,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAInC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACjB,4BAAIA,QCJPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA8BA,OAtBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAO1B,CAACpB,IAOGqB,ED3ByBK,CAAc1B,GAAjCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAYfO,EAAgBd,EAAOJ,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,eAESA,GADEA,EAAIC,OAMnB,OACI,qCACK,oBAAIK,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACd,qBAAKA,UAAU,YAAf,SACUW,QE3BTC,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACI,qCACK,8CACD,cAAC,EAAD,CAAaA,cAAeA,IAExB,uBAGA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEKA,SAAYA,GADLA,Y,MCbvC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5109722b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n    \n    \n    const [inputValue, setinputValue] = useState('')\n    \n    const handleInputChange = (e) =>{\n        \n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e)=>{\n\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(anime => [inputValue, ...anime ])\n            setinputValue('')\n        }\n\n        \n\n  \n    }\n\n\n    return (\n          \n            <form onSubmit={handleSubmit}>\n                <input \n                        type=\"text\"\n                        value={inputValue}\n                        onChange={ handleInputChange}\n                    />\n            </form>\n            \n       \n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","\n\n\nexport const getGifs = async ( category ) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=3le6CA6SMH9oeAOAJ8lImGJm0zTl7SjW`;\n\n    const resp = await fetch(url);\n\n    const { data } = await resp.json()\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n};","import React from 'react'\n\nexport const GifGridItem = ( {id,title,url}) => {\n\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={ title }/>\n                <p>{title}</p>\n       \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const {data: images, loading} = useFetchGifs( category );\n\n\n\n    \n\n    /*\n    const cargarTitulos = images.map(({id, title}) =>(\n        <li key = {id}>{title}</li>\n    ));\n    */\n\n    const cargarTitulos = images.map((img) =>(\n        <GifGridItem \n            key = {img.id}\n            { ...img }\n        />\n    ));\n\n\n    return (\n        <>\n             <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n             { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                    { cargarTitulos }\n                    \n            \n                \n            </div>\n        </>\n       \n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    // [] significa que se ejecuta una sola vez al renderizar el componente.\n\n    useEffect( () => {\n        \n        getGifs( category )\n            .then( imgs => {\n                \n\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n\n\n                \n            })\n \n    }, [category])\n\n\n\n\n   \n\n    return state;  // { data:[], loading: true }\n\n}\n   \n\n\n\n","\n\nimport React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['Samurai X'])\n\n\n    return (\n        <>\n             <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n\n                <hr/>\n\n                    \n                <ol>\n                    {\n                        categories.map(category =>( \n                           <GifGrid \n                                key = {category}\n                                category = {category}/>\n                        ))\n                    }\n                </ol>\n\n               \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}